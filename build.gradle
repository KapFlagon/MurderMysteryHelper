plugins {
    id 'java'
    // https://badass-runtime-plugin.beryx.org/releases/latest/
    id 'org.beryx.runtime' version '1.12.5'
    // https://github.com/johnrengelman/shadow
    id "com.github.johnrengelman.shadow" version "7.0.0"
    //id "com.github.johnrengelman.shadow" version "6.1.0"
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'application'
}

group 'org.example'
version '1.0'

repositories {
    mavenCentral()
}

javafx {
    version = '15.0.1'
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.media' ]
    //configuration = 'compileOnly'
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    /*
    // https://mvnrepository.com/artifact/org.openjfx/javafx-controls
    implementation group: 'org.openjfx', name: 'javafx-controls', version: '15.0.1'
    // https://mvnrepository.com/artifact/org.openjfx/javafx-fxml
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: '15.0.1'
    // https://mvnrepository.com/artifact/org.openjfx/javafx-media
    implementation group: 'org.openjfx', name: 'javafx-media', version: '15.0.1'
    // https://mvnrepository.com/artifact/org.openjfx/javafx-graphics
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: '15.0.1'
    */


    // https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

    // Old Afterburner.fx
    // https://mvnrepository.com/artifact/com.airhacks/afterburner.fx
    implementation group: 'com.airhacks', name: 'afterburner.fx', version: '1.7.0'

    // New Afterburner.fx
    // https://mvnrepository.com/artifact/com.dlsc.afterburner/afterburner.fx
    //compile group: 'com.dlsc.afterburner', name: 'afterburner.fx', version: '2.1.0'

    // https://mvnrepository.com/artifact/com.j256.ormlite/ormlite-core
    implementation group: 'com.j256.ormlite', name: 'ormlite-core', version: '5.3'
    //implementation 'com.j256.ormlite:ormlite-core:5.3'

    // https://mvnrepository.com/artifact/com.j256.ormlite/ormlite-jdbc
    //implementation group: 'com.j256.ormlite', name: 'ormlite-jdbc', version: '5.3'

    // https://mvnrepository.com/artifact/org.xerial/xerial-core
    //implementation group: 'org.xerial', name: 'xerial-core_2.12', version: '3.6.0'

    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    //implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.34.0'

    sourceSets.main.resources.srcDirs("src/main/java").includes.addAll(["**/*.fxml", "**/*.css", "**/*.properties"])
    sourceSets.main.resources.srcDirs("src/main/resources").includes.addAll(["**/*.*"])

    // https://mvnrepository.com/artifact/com.opencsv/opencsv
    implementation group: 'com.opencsv', name: 'opencsv', version: '5.4'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.3'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.12.3'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.12.3'

}

test {
    useJUnitPlatform()
}

jar {
    duplicatesStrategy = 'include'
    manifest {
        //attributes 'Main-Class': 'driver.Main'
        attributes 'Main-Class': 'driver.MurderMysteryHelperApp'
    }
    /*from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }*/
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
}


application {
    //mainClassName = "java/driver/Main"
    //mainModule = "KanbanBo.main"
    //mainModule.set("MurderMysteryHelperApp.main")
    //mainClass.set("java/driver/Main.main")
    //mainClass.set("driver.MurderMysteryHelperApp")
    mainClass.set("driver.Main")
    applicationName = 'Murder Mystery Helper'
}

jpackage {
    // Uncomment and adjust the following line if your runtime task is configured to generate images for multiple platforms
    // targetPlatformName = "mac"

    def currentOs = org.gradle.internal.os.OperatingSystem.current()
    def appVersion = "1.0.0"
    //def imgType = currentOs.windows ? 'ico' : currentOs.macOsX ? 'icns' : 'png'
    //imageOptions += ['--icon', "src/main/resources/hellofx.$imgType"]
    //skipInstaller = true
    //installerOptions += ['--resource-dir', "src/main/resources"]
    //installerOptions += ['--vendor', 'Acme Corporation']

    /*
    if(currentOs.windows) {
        installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
    }
    else if (currentOs.linux) {
        installerOptions += ['--linux-package-name', 'MurderMysteryHelper','--linux-shortcut']
    }
    else if (currentOs.macOsX) {
        installerOptions += ['--mac-package-name', 'MurderMysteryHelper']
    }*/
}